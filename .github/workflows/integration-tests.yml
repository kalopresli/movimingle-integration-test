name: Integration Tests

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set executable permissions for scripts
        run: chmod +x ./init-cassandra.sh

      - name: Archive Repository
        run: |
          zip -r repository.zip .

      - name: Build services
        run: docker-compose build
        # Add logging to catch any errors during the build process
        continue-on-error: true

      - name: Start services
        run: docker-compose up -d
        # Check the logs after starting services to diagnose issues
        continue-on-error: true

      - name: Check Docker Compose Services
        run: docker-compose ps

      - name: Check Docker Container Logs
        run: docker-compose logs
        continue-on-error: true

      - name: Upload Docker Container Logs
        uses: actions/upload-artifact@v2
        if: failure() # This condition makes sure logs are uploaded only when a failure occurs
        with:
          name: docker-logs
          path: ./docker-logs.log

      - name: Send test message
        run: |
          curl -f http://localhost:8080/send?message=Hello
          echo "Message sent to the voting service."
        # Ensure you add handling for possible failure in sending message
        continue-on-error: true

      - name: Wait for log file update
        run: sleep 10

      - name: Collect all files for diagnostics
        run: |
          mkdir -p artifacts
          docker-compose logs > artifacts/docker-logs.log
          cp -r ./logs/ artifacts/logs/  # Adjust as necessary for other directories
        # Ensure this step handles cases where logs might not exist or be accessible
        continue-on-error: true

      - name: Upload all artifacts
        uses: actions/upload-artifact@v2
        with:
          name: all-artifacts
          path: artifacts/

      - name: Clean up
        run: docker-compose down

      - name: Check final Docker Container Logs
        run: docker-compose logs
