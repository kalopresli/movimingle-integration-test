name: Integration Tests

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          submodules: true  # Ensure submodules are checked out

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Build and start services
        run: docker-compose up -d --build

      - name: Check services are running
        run: docker-compose ps

      - name: Send test message
        run: |
          curl -f http://localhost:8080/send?message=Hello
          echo "Message sent to the voting service."

      - name: Wait for log file update
        run: sleep 10  # Adjust the timing as necessary

      - name: Check logs for the message
        id: check_logs
        run: |
          mkdir -p artifacts/logs  # Ensure the directory exists
          cp ./logs/voting-service.log artifacts/logs/  # Copy logs to a known location
          if grep -q 'Hello' artifacts/logs/voting-service.log; then
            echo "::set-output name=message_status::found"
          else
            echo "::set-output name=message_status::not found"
            exit 1
          fi

      - name: Output result
        if: steps.check_logs.outputs.message_status == 'found'
        run: echo "Test message received by the voting service."

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: logs
          path: artifacts/logs/

      - name: Clean up
        run: docker-compose down
